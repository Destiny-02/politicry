openapi: 3.0.2
info:
  description: The backend API for the Politicry service
  version: "0.1.0"
  license:
    name: "MIT"
    url: https://opensource.org/licenses/MIT
  title: Politicry Backend API Reference
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  responses:
    '400':
      description: Bad request! Likely some of your values are out of range or generally invalid.
      content:
        text/plain:
          schema:
            type: string

    '422':
      description: Missing/invalid fields on your provided data.
      content:
        text/plain:
          schema:
            type: string

    '429':
      description: You have made too many requests to the api recently. Implement some form of exponential backoff before trying again.

  schemas:
    Detection:
      type: object
      required:
        - word
        - confidence
      properties:
        word:
          type: string
          description: the word that was detected in plain-text
        confidence:
          type: number
          description: the confidence that the found word truly exists

    MediaItemWithoutDetection:
      type: object
      required:
        - url
        - hash
        - height
        - width
        - media_type
      properties:
        url:
          description: A direct url to the raw media item
          type: string
        hash:
          description: A sha256 hash generated from the media item
          type: string
        width:
          description: The width of the item, in pixels
          type: integer
        height:
          description: The height of hte item, in pixels
          type: integer
        media_type:
          type: string
          description: The variety of media item being sent
          enum: ['image', 'video']

    MediaItem:
      type: object
      required:
        - url
        - hash
        - height
        - width
        - media_type
      properties:
        url:
          description: A direct url to the raw media item
          type: string
        hash:
          description: A sha256 hash generated from the media item
          type: string
        width:
          description: The width of the item, in pixels
          type: integer
        height:
          description: The height of hte item, in pixels
          type: integer
        media_type:
          type: string
          description: The variety of media item being sent
          enum: ['image', 'video']
        words:
          type: array
          description: The list of words to upload.
          items:
            $ref: '#/components/schemas/Detection'

    DetectionGet:
      type: object
      required:
        - platform
        - items
      properties:
        unique_id:
          type: integer
          description: a unique id for this request, it will be sent back with the response and not stored
        platform: 
          type: string
          description: the platform the media items were found on
          enum: [reddit, twitter, imgur, instagram]
        items:
          type: array
          description: an array of media items to request detections for
          items:
            $ref: '#/components/schemas/MediaItemWithoutDetection'

    DetectionSet:
      type: object
      required:
        - platform
        - items
      properties:
        platform:
          type: string
          description: the platform the media items were found on
          enum: [reddit, twitter, imgur, instagram]
        items:
          type: array
          description: an array of media items with detections
          items:
            $ref: '#/components/schemas/MediaItem'

    NewRegistration:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

paths:
  /api/1/register:
    get:
      summary: Request a new registration from the api, this doesn't require user input.
      responses:
        '200':
          description: New user successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRegistration'

  /api/1/detection:
    get:
      summary: Request information on detections for the contained items
      requestBody:
        description: Provide information on the media items you wish to acquire data for.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionGet'
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successfully collected information for items on the provided word list. Note that this just indicates the request was successful, it is possible that there are no detections in the returned data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionSet'

        '400':
          $ref: '#/components/responses/400'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'

    post:
      summary: Add detections to the api.
      requestBody:
        description: The media items to add detections for.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionSet'
      security:
        - basicAuth: []

      responses:
        '200':
          description: Detections received and accepted.
        '400':
          $ref: '#/components/responses/400'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'


